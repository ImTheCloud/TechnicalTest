
peux tu ajouter par defaut dans le frond de l'application d'une belle facon sur le coter gauche et droite des test par defaut comme 1,6,10, 11, 21, 23, et 31 :



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Change Calculation</title>

    <style>
        body {
            font-family: sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
        }

        #calculator {
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            width: 80%;
            max-width: 400px;
            margin: 0 auto;
            text-align: center;
        }

        h2 {
            color: #333;
            font-size: 24px;
            margin-bottom: 20px;
        }

        form {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 10px;
            font-size: 16px;
            color: #555;
        }

        input {
            padding: 10px;
            width: 100%;
            box-sizing: border-box;
            margin-bottom: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button {
            padding: 10px;
            background-color: #4caf50;
            color: #fff;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
        }

        button:hover {
            background-color: #45a049;
        }

        #resultContainer {
            margin-bottom: 20px;
            text-align: left;
        }

        .result {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            margin-top: 10px;
        }

        .solution {
            color: #4caf50;
            font-weight: bold;
        }

        .error {
            color: #f44336;
            font-weight: bold;
        }
    </style>
</head>
<body>

<div id="calculator">
    <h2>Change Calculation</h2>
    <form id="changeForm">
        <label for="amount">Enter an amount to test:</label>
        <input type="number" id="amount" name="amount" required>
        <button type="button" onclick="calculateChange()">Test</button>
    </form>

    <div id="resultContainer"></div>
</div>

<script>
function calculateChange() {
    var amount = parseFloat(document.getElementById("amount").value);

    if (isNaN(amount)) {
        document.getElementById("resultContainer").innerHTML = "<p class='error'>Please enter a valid amount.</p>";
        return;
    }

    var xhr = new XMLHttpRequest();
    xhr.onreadystatechange = function() {
        if (xhr.readyState == 4 && xhr.status == 200) {
            document.getElementById("resultContainer").innerHTML = xhr.responseText;
        }
    };

    xhr.open("POST", "backend.php", true);
    xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhr.send("amount=" + amount);
}
</script>

</body>
</html>


<?php

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $testAmount = $_POST["amount"];

    function giveChange($amount) {
        $solution = array();
        $initialAmount = $amount;
        $numberOfBills = 0;

        while ($amount > 13 || $amount == 12 || $amount == 10) {
            $numberOfBills++;
            $solution[10] = $numberOfBills;
            $amount -= 10;
        }

        if ($amount % 2 != 0) {
            $solution[5] = 1;
            $amount -= 5;
        }

        if ($amount == 6) {
            $solution[2] = 3;
            $amount = 0;
        } elseif ($amount == 8) {
            $solution[4] = 2;
            $amount = 0;
        } else {
            $numberOfBills =0;
            while ($amount > 0) {
                $numberOfBills++;
                $solution[2] = $numberOfBills;
                $amount -= 2;
            }
        }

        $result = "<div class='result'>";
        $result .= "<h2>Amount to return: $" . $initialAmount . "</h2>";

        if ($amount == 0) {
            $result .= "<div class='solution'>Optimal solution:</div>";
            $result .= "<ul>";
            foreach ($solution as $key => $value) {
                $result .= "<li>" . $value . " * $" . $key . "</li>";
            }
            $result .= "</ul>";
        } else {
            $result .= "<div class='error'>Unable to give change.</div>";
        }

        $result .= "</div>";
        return $result;
    }

    // Appel de la fonction et affichage du résultat
    $output = giveChange($testAmount);
    echo $output;
}
?>
